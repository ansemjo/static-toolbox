# fdisk, sfdisk - utility that provides disk partitioning functions
# These utilities are built from the util-linux set of utilities and
# the script can build many other utilities with minimal changes.
# https://en.wikipedia.org/wiki/Util-linux

# base image
FROM alpine:edge as build

# install requirements
RUN apk add --no-cache gnupg gnupg-keyboxd build-base linux-headers curl jq tar xz # common base

# import gpg keys and trust them
COPY fdisk.keys /gpgkeys
RUN gpg --import </gpgkeys && printf '%s:6:\n' \
  B0C64D14301CC6EFAEDF60E4E4B71D5EEC39C284 \
  | gpg --import-ownertrust

# download and verify latest sources
WORKDIR /download
ENV MIRROR="https://mirrors.edge.kernel.org/pub"
RUN curl -s "$MIRROR/linux/utils/util-linux/" \
  | sed -n 's/.*href="v\([0-9.]\+\)\/".*/\1/p' \
  | sort -rV | while read MAJOR; do \
    echo "$MAJOR" > MAJOR; \
    curl -s "$MIRROR/linux/utils/util-linux/v$MAJOR/" \
    | sed -n 's/.*href="util-linux-\([0-9.]\+\)\.tar\.xz".*/\1/p' \
    | sort -rV | head -1 > VERSION; \
    export VERSION=$(cat VERSION); \
    if test -n "$VERSION"; then break; fi; \
  done \
  && export VERSION=$(cat VERSION) \
  && export MAJOR=$(cat MAJOR) \
  && wget "$MIRROR/linux/utils/util-linux/v$MAJOR/util-linux-$VERSION.tar.xz" \
  && wget "$MIRROR/linux/utils/util-linux/v$MAJOR/util-linux-$VERSION.tar.sign" \
  && xz -dc *.tar.xz | gpg --verify *.sign -

# extract sources
WORKDIR /build
RUN tar xf /download/*.tar.xz --strip-components=1

# compile binaries
ENV LDFLAGS="-Wl,-z,now -Wl,-z,relro -static -s" 
ENV CFLAGS="-fPIC -pie -fstack-protector-all -O2 -D_FORTIFY_SOURCE=2 -static -s"
RUN ./configure \
      --enable-static \
      --enable-static-programs=fdisk,sfdisk \
      --disable-pylibmount \
      --without-python \
      --disable-liblastlog2 \
  && make -j$(nproc) fdisk.static sfdisk.static \
  && (ldd fdisk.static && exit 1 || true) \
  && (ldd sfdisk.static && exit 1 || true)

# copy sources to new stage
FROM scratch as sources
COPY --from=build /download /
COPY fdisk /Dockerfile

# copy binaries to new stage
FROM scratch as binary
COPY --from=build /build/fdisk.static /fdisk
COPY --from=build /build/sfdisk.static /sfdisk

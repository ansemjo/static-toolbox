FROM alpine:latest as build

# set version
ENV VERSION=2.33

# install requirements
RUN apk add --no-cache \
  gnupg \
  build-base \
  linux-headers

# switch to build directory
WORKDIR /build

# download packages
ENV MIRROR="https://mirrors.edge.kernel.org/pub/linux"
RUN \
  wget "$MIRROR/utils/util-linux/v$VERSION/util-linux-$VERSION.tar.gz" && \
  wget "$MIRROR/utils/util-linux/v$VERSION/util-linux-$VERSION.tar.sign"

# import gpg keys and trust them
COPY gpgkey-B0C64D14301CC6EFAEDF60E4E4B71D5EEC39C284.asc /gpgkey
RUN gpg --import </gpgkey
RUN printf '%s:6:\n' \
  B0C64D14301CC6EFAEDF60E4E4B71D5EEC39C284 \
  | gpg --import-ownertrust

# verify signatures
RUN for g in *.gz; do gunzip -f $g; done
RUN for s in *.sign; do gpg --verify "$s"; rm -f "$s"; done

# extract packages
RUN for t in *.tar; do tar xf "$t"; done

# compilation environment
ENV LDFLAGS="-Wl,-z,now -Wl,-z,relro -static -s" 
ENV CFLAGS="-fPIC -pie -fstack-protector-all -O2 -D_FORTIFY_SOURCE=2 -static -s"

# compile binaries
RUN cd util-linux-$VERSION &&\
    ./configure \
      --enable-static \
      --enable-static-programs=fdisk,sfdisk \
      --disable-pylibmount \
      --without-python &&\
    make -j$(nproc) fdisk.static sfdisk.static

# move to output directory
WORKDIR /output
RUN cp /build/util-linux-$VERSION/fdisk.static  fdisk
RUN cp /build/util-linux-$VERSION/sfdisk.static sfdisk

# copy binaries to new stage
FROM scratch
COPY --from=build /output /

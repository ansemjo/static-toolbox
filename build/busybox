# busybox - the swiss army knife of embedded linux
# A binary which combines tiny versions of many common UNIX
# utilities into a single executable. Different functions can
# be accesses by symlinking it to different names.
# https://busybox.net/about.html

# base image
FROM alpine:latest as build

# install requirements
RUN apk add --no-cache gnupg build-base linux-headers curl jq tar xz # common base

# import gpg keys and trust them
COPY busybox.keys /gpgkeys
RUN gpg --import </gpgkeys && printf '%s:6:\n' \
  C9E9416F76E610DBD09D040F47B70C55ACC9965B \
  | gpg --import-ownertrust

# download and verify latest sources
WORKDIR /download
ENV MIRROR "https://busybox.net/downloads/"
RUN curl -s "$MIRROR" \
  | sed -n 's/.*href="busybox-\([0-9.]\+\)\.tar\.[a-z0-9]\+".*/\1/p' \
  | sort -rV | head -1 > VERSION \
  && export VERSION=$(cat VERSION) \
  && wget "$MIRROR/busybox-$VERSION.tar.bz2" \
  && wget "$MIRROR/busybox-$VERSION.tar.bz2.sig" \
  && gpg --verify *.sig

# extract sources
WORKDIR /build
RUN tar xf /download/*.tar.bz2 --strip-components=1

# compile binaries
ENV LDFLAGS="-Wl,-z,now -Wl,-z,relro -static -s" 
ENV CFLAGS="-fPIC -pie -fstack-protector-all -O2 -D_FORTIFY_SOURCE=2 -static -s"
RUN make defconfig \
  && make -j$(nproc) \
  && (ldd busybox && exit 1 || true)

# copy sources to new stage
FROM scratch as sources
COPY --from=build /download /
COPY busybox /Dockerfile

# copy binaries to new stage
FROM scratch as binary
COPY --from=build /build/busybox /

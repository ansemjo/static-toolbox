# curl - commandline tool to transfer data with URL syntax
# Supports dict file ftp ftps gopher gophers http https imap imaps
# ipfs ipns mqtt pop3 pop3s rtsp scp sftp smb smbs smtp smtps telnet tftp
# https://github.com/curl/curl

# base image
FROM alpine:edge as build

# install requirements
RUN apk add --no-cache gnupg gnupg-keyboxd build-base linux-headers curl jq tar xz # common base
RUN apk add --no-cache ca-certificates perl \
  openssl-libs-static openssl-dev \
  zlib-static zlib-dev \
  brotli-static brotli-dev \
  zstd-static zstd-dev \
  nghttp2-dev nghttp2-static \
  libssh2-dev libssh2-static \
  libpsl-static libpsl-dev \
  libidn2-static libidn2-dev idn2-utils

# import gpg keys and trust them
COPY curl.keys /gpgkeys
RUN gpg --import </gpgkeys && printf '%s:6:\n' \
  27EDEAF22F3ABCEB50DB9A125CC908FDB71E12C2 \
  | gpg --import-ownertrust

# download and verify latest sources
WORKDIR /download
RUN curl -H "Accept: application/vnd.github.v3+json" \
  "https://api.github.com/repos/curl/curl/releases/latest" \
  | jq -r .assets[].browser_download_url \
  | grep '\.tar\.xz\(\.asc\)\?$' \
  | xargs wget \
  && gpg --verify *.asc

# extract sources
WORKDIR /build
RUN tar xf /download/*.tar.xz --strip-components=1

# compile binaries
ENV LDFLAGS="-Wl,-z,now -Wl,-z,relro -static -s" 
ENV CFLAGS="-fPIC -pie -fstack-protector-all -O2 -static -s"
ENV CPPFLAGS="-D_FORTIFY_SOURCE=2"
ENV PKG_CONFIG="pkg-config --static"
RUN ./configure --help && \
    ./configure \
      --disable-shared \
      --enable-static \
      --with-ssl \
      --with-zlib \
      --with-brotli \
      --with-zstd \
      --with-libssh2 \
      --enable-ipv6 \
      --enable-unix-sockets \
      --enable-manual \
      --without-libpsl \
  && make -j$(nproc) LDFLAGS="$LDFLAGS -all-static" \
  && (ldd src/curl && exit 1 || true)

# copy sources to new stage
FROM scratch as sources
COPY --from=build /download /
COPY curl /Dockerfile

# copy binaries to new stage
FROM scratch as binary
COPY --from=build /build/src/curl /
COPY --from=build /etc/ssl/certs/ca-certificates.crt /
